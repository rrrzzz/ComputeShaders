#pragma kernel FunctionKernel

#define PI 3.14159265358979323846

float _Step, _Time;
uint _Resolution;
RWStructuredBuffer<float3> _Positions;

float3 Wave(float u, float v, float t)
{
    float3 p;
            
    p.x = u;
    p.y = sin(PI * (u + v - t));
    p.z = v;

    return p;
} 

float2 GetUV(uint3 id)
{
    return (id.xy + .5) * _Step - 1.0;
}

void SetPosition(uint3 id, float3 position)
{
    if (id.x < _Resolution && id.y < _Resolution)
    {
        _Positions[id.x + id.y * _Resolution] = position;
    }
}

[numthreads(8,8,1)]
void FunctionKernel(uint3 id: SV_DispatchThreadID)
{
    float2 uv = GetUV(id);
    float3 position = Wave(uv.x, uv.y, _Time);
    SetPosition(id, position);
}



    
